<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:base="clr-namespace:Tesonet.Client.ViewModels.Base"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    mc:Ignorable="d">

    <!-- *********************************  COLORS  ********************************* -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Colors.xaml" />
        <ResourceDictionary Source="Images.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <base:ViewModelLocator x:Key="Locator" />
    
    <SolidColorBrush x:Key="BackGroundBrush"
                     Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="ControlBackGroundBrush"
                     Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="TopToolbarBackgroundBrush"
                     Color="{StaticResource Color_024}" />

    <!-- *********************************  BRUSHES  ********************************* -->
    <SolidColorBrush x:Key="ForegroundBrush"
                     Color="{StaticResource Color_002}" />
    <SolidColorBrush x:Key="LightForegroundBrush"
                     Color="{StaticResource Color_001}" />
    <SolidColorBrush x:Key="TransparentBrush"
                     Color="{StaticResource Color_016}" />
    <SolidColorBrush x:Key="DisabledVisualElement"
                     Color="{StaticResource Color_009}"
                     Opacity="0.6" />
    <SolidColorBrush x:Key="ValidationErrorElement"
                     Color="{StaticResource Color_028}" />
    <SolidColorBrush x:Key="CaretForegroundBrush"
                     Color="{StaticResource Color_022}" />
    <SolidColorBrush x:Key="ErrorMessageBorderBrush"
                     Color="{StaticResource Color_028}" />
    <SolidColorBrush x:Key="ErrorMessageTitleBackgroundBrush"
                     Color="{StaticResource Color_030}" />
    <SolidColorBrush x:Key="ErrorMessageBackgroundBrush"
                     Color="{StaticResource Color_031}" />
    
    <!-- TextBox Brushes -->
    <SolidColorBrush x:Key="TextBoxBackgroundBrush"
                     Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="TextBoxBorderBrush"
                     Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="TextBoxHoverBackgroundBrush"
                     Color="{StaticResource Color_008}" />
    <SolidColorBrush x:Key="TextBoxHoverBorderBrush"
                     Color="{StaticResource Color_003}" />
    <SolidColorBrush x:Key="TextBoxFocusedBrush"
                     Color="{StaticResource Color_024}" />
    <SolidColorBrush x:Key="TextBoxReadOnlyBackgroundBrush"
                     Color="{StaticResource Color_007}" />

    <!-- Button Brushes -->
    <SolidColorBrush x:Key="ButtonBackgroundBrush"
                     Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="ButtonBorderBrush"
                     Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="ButtonHoverBackgroundBrush"
                     Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="ButtonHoverBorderBrush"
                     Color="{StaticResource Color_004}" />
    <SolidColorBrush x:Key="ButtonPressedBackgroundBrush"
                     Color="{StaticResource Color_024}" />
    <SolidColorBrush x:Key="ButtonPressedBorderBrush"
                     Color="{StaticResource Color_024}" />

    <!-- ListBox Brushes -->
    <SolidColorBrush x:Key="ListBoxBackgroundBrush"
                     Color="{StaticResource Color_009}" />
    <SolidColorBrush x:Key="ListBoxBorderBrush"
                     Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="ListBoxItemHoverBackgroundBrush"
                     Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="ListBoxItemHoverBorderBrush"
                     Color="{StaticResource Color_004}" />
    <SolidColorBrush x:Key="ListBoxItemPressedBackgroundBrush"
                     Color="{StaticResource Color_024}" />
    <SolidColorBrush x:Key="ListBoxItemPressedBorderBrush"
                     Color="{StaticResource Color_024}" />

    <SolidColorBrush x:Key="ListBoxItemBackgroundBrush"
                     Color="{StaticResource Color_016}" />
    <!-- Need to change color or delete -->
    <SolidColorBrush x:Key="ListBoxItemBorderBrush"
                     Color="{StaticResource Color_016}" />
    <!-- Need to change color or delete -->
    <SolidColorBrush x:Key="ListBoxItemSelectedBackgroundBrush"
                     Color="{StaticResource Color_024}" />
    <!-- Need to change color or delete -->
    <SolidColorBrush x:Key="ListBoxItemSelectedBorderBrush"
                     Color="{StaticResource Color_024}" />
    <!-- Need to change color or delete -->

    <!-- ValidationToolTip Brushes -->
    <SolidColorBrush x:Key="ValidationToolTipTemplateShadowBrush"
                     Color="{StaticResource Color_003}" />

    <!-- Scrollbar Brushes -->
    <SolidColorBrush x:Key="HScrollbarThumbBackgroundBrush"
                     Color="{StaticResource Color_003}" />
    <SolidColorBrush x:Key="VScrollbarThumbBackgroundBrush"
                     Color="{StaticResource Color_003}" />
    <SolidColorBrush x:Key="ScrollbarPageButtonArrowBackgroundBrush"
                     Color="{StaticResource Color_003}" />
    <SolidColorBrush x:Key="ScrollbarPageButtonArrowPressedBackgroundBrush"
                     Color="{StaticResource Color_024}" />
    <SolidColorBrush x:Key="ScrollbarPageButtonArrowHoverBackgroundBrush"
                     Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="ScrollbarPageButtonArrowDisabledBackgroundBrush"
                     Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="VScrollbarThumbHoverBackgroundBrush"
                     Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="HScrollbarThumbHoverBackgroundBrush"
                     Color="{StaticResource Color_005}" />
    <SolidColorBrush x:Key="VScrollbarThumbPressedBackgroundBrush"
                     Color="{StaticResource Color_024}" />
    <SolidColorBrush x:Key="HScrollbarThumbPressedBackgroundBrush"
                     Color="{StaticResource Color_024}" />
    <SolidColorBrush x:Key="VScrollbarThumbDisabledBackgroundBrush"
                     Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="HScrollbarThumbDisabledBackgroundBrush"
                     Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="ScrollbarDisabledBackgroundBrush"
                     Color="{StaticResource Color_006}" />
    <SolidColorBrush x:Key="ScrollbarBackgroundBrush"
                     Color="{StaticResource Color_009}" />

    <!-- *********************************  TextBlock Style  ********************************* -->
    <Style x:Key="TextBlockStyle"
           TargetType="TextBlock">
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontSize"
                Value="13.333" />
        <Setter Property="FontFamily"
                Value="Segoe UI" />
    </Style>
    
    <!-- *********************************  ValidationToolTip Template  ********************************* -->
    <ControlTemplate x:Key="ValidationToolTipTemplate">
        <Grid x:Name="Root"
              Margin="5,0"
              Opacity="0"
              RenderTransformOrigin="0,0">
            <Grid.RenderTransform>
                <TranslateTransform x:Name="xform"
                                    X="-25" />
            </Grid.RenderTransform>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0" />
                        <VisualTransition GeneratedDuration="0:0:0.2"
                                          To="Open">
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.2"
                                                 To="0"
                                                 Storyboard.TargetProperty="X"
                                                 Storyboard.TargetName="xform">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase Amplitude=".3"
                                                  EasingMode="EaseOut" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Duration="0:0:0.2"
                                                 To="1"
                                                 Storyboard.TargetProperty="Opacity"
                                                 Storyboard.TargetName="Root" />
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Closed">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             To="0"
                                             Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="Root" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Open">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             To="0"
                                             Storyboard.TargetProperty="X"
                                             Storyboard.TargetName="xform" />
                            <DoubleAnimation Duration="0"
                                             To="1"
                                             Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="Root" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Background="{StaticResource ValidationToolTipTemplateShadowBrush}"
                    CornerRadius="5"
                    Margin="4,4,-4,-4"
                    Opacity="0.02" />
            <Border Background="{StaticResource ValidationToolTipTemplateShadowBrush}"
                    CornerRadius="4"
                    Margin="3,3,-3,-3"
                    Opacity="0.08" />
            <Border Background="{StaticResource ValidationToolTipTemplateShadowBrush}"
                    CornerRadius="3"
                    Margin="2,2,-2,-2"
                    Opacity="0.15" />
            <Border Background="{StaticResource ValidationToolTipTemplateShadowBrush}"
                    CornerRadius="2"
                    Margin="1,1,-1,-1"
                    Opacity="0.21" />
            <Border Background="{StaticResource ValidationErrorElement}"
                    CornerRadius="2" />
            <Border CornerRadius="2">
                <TextBlock Foreground="{StaticResource ForegroundBrush}"
                           MaxWidth="250"
                           Margin="8,4,8,4"
                           TextWrapping="Wrap"
                           Text="{Binding (Validation.Errors)[0].ErrorContent}"
                           UseLayoutRounding="false" />
            </Border>
        </Grid>
    </ControlTemplate>
    
    <!-- *********************************  ScrollBarButton Style  ********************************* -->
    <Style x:Key="ScrollBarButtonStyle"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="MinWidth"
                Value="30" />
        <Setter Property="MinHeight"
                Value="30" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid x:Name="grid1">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="Fill"
                                                                       Storyboard.TargetName="Arrow">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource ScrollbarPageButtonArrowHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="Fill"
                                                                       Storyboard.TargetName="Arrow">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource ScrollbarPageButtonArrowPressedBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="Fill"
                                                                       Storyboard.TargetName="Arrow">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource ScrollbarPageButtonArrowDisabledBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Fill="{StaticResource TransparentBrush}"
                                   Margin="-5" />
                        <Path x:Name="Arrow"
                              Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z "
                              Height="6"
                              Stretch="Uniform"
                              Width="10"
                              Fill="{StaticResource ScrollbarPageButtonArrowBackgroundBrush}"
                              Margin="{TemplateBinding Padding}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  ScrollBarPageButton Style  ********************************* -->
    <Style x:Key="ScrollBarPageButtonStyle"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}"
                               Height="{TemplateBinding Height}"
                               Width="{TemplateBinding Width}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Rectangle>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  Horizontal ScrollBarThumb Style  ********************************* -->
    <Style x:Key="HScrollBarThumbStyle"
           TargetType="{x:Type Thumb}">
        <Setter Property="MinWidth"
                Value="20" />
        <Setter Property="MinHeight"
                Value="30" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Margin="0">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="Fill"
                                                                       Storyboard.TargetName="Thumb">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource HScrollbarThumbHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="Fill"
                                                                       Storyboard.TargetName="Thumb">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource HScrollbarThumbPressedBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="Fill"
                                                                       Storyboard.TargetName="Thumb">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource HScrollbarThumbDisabledBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Fill="{StaticResource TransparentBrush}"
                                   Margin="-5" />
                        <Rectangle x:Name="Thumb"
                                   Margin="1"
                                   Fill="{StaticResource HScrollbarThumbBackgroundBrush}"
                                   Height="8" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  Vertical ScrollbarThumb Style  ********************************* -->
    <Style x:Key="VScrollBarThumbStyle"
           TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="MinWidth"
                Value="30" />
        <Setter Property="MinHeight"
                Value="20" />
        <Setter Property="Stylus.IsPressAndHoldEnabled"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="grid"
                          Height="Auto"
                          Width="Auto">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="Fill"
                                                                       Storyboard.TargetName="Thumb">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource VScrollbarThumbHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="Fill"
                                                                       Storyboard.TargetName="Thumb">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource VScrollbarThumbPressedBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="Fill"
                                                                       Storyboard.TargetName="Thumb">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource VScrollbarThumbDisabledBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Fill="{StaticResource TransparentBrush}"
                                   Margin="-5" />
                        <Rectangle x:Name="Thumb"
                                   Fill="{StaticResource VScrollbarThumbBackgroundBrush}"
                                   Width="8" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- *********************************  ScrollBar Style  ********************************* -->
    <Style x:Key="ScrollBarStyle"
           TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled"
                Value="false" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="false" />
        <Setter Property="Width"
                Value="30" />
        <Setter Property="MinWidth"
                Value="30" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30" />
                            <RowDefinition Height="0.00001*" />
                            <RowDefinition Height="30" />
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="repeatButton">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.6" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="repeatButton1">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.6" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="thumb">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Bg"
                                   Grid.RowSpan="3"
                                   Fill="{StaticResource ScrollbarBackgroundBrush}"
                                   Margin="0" />
                        <RepeatButton x:Name="repeatButton"
                                      Command="{x:Static ScrollBar.LineUpCommand}"
                                      IsEnabled="True"
                                      Style="{StaticResource ScrollBarButtonStyle}"
                                      HorizontalAlignment="Center" />
                        <Track x:Name="PART_Track"
                               IsDirectionReversed="true"
                               IsEnabled="True"
                               Grid.Row="1">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}"
                                              Style="{StaticResource ScrollBarPageButtonStyle}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}"
                                              Style="{StaticResource ScrollBarPageButtonStyle}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb x:Name="thumb"
                                       Style="{StaticResource VScrollBarThumbStyle}"
                                       HorizontalAlignment="Center"
                                       Width="30" />
                            </Track.Thumb>
                        </Track>
                        <RepeatButton x:Name="repeatButton1"
                                      Command="{x:Static ScrollBar.LineDownCommand}"
                                      IsEnabled="True"
                                      Grid.Row="2"
                                      Style="{StaticResource ScrollBarButtonStyle}"
                                      RenderTransformOrigin="0.5,0.5"
                                      HorizontalAlignment="Center">
                            <RepeatButton.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="180" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </RepeatButton.RenderTransform>
                        </RepeatButton>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Fill"
                                    TargetName="Bg"
                                    Value="{StaticResource ScrollbarDisabledBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation"
                     Value="Horizontal">
                <Setter Property="Width"
                        Value="Auto" />
                <Setter Property="MinWidth"
                        Value="0" />
                <Setter Property="Height"
                        Value="30" />
                <Setter Property="MinHeight"
                        Value="30" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="30" />
                                    <ColumnDefinition Width="0.00001*" />
                                    <ColumnDefinition Width="30" />
                                </Grid.ColumnDefinitions>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0:0:0.3" />
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                               Storyboard.TargetName="repeatButton">
                                                    <EasingDoubleKeyFrame KeyTime="0"
                                                                          Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                               Storyboard.TargetName="repeatButton1">
                                                    <EasingDoubleKeyFrame KeyTime="0"
                                                                          Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Rectangle x:Name="Bg"
                                           Grid.ColumnSpan="5"
                                           Fill="{StaticResource ScrollbarBackgroundBrush}"
                                           Margin="0" />
                                <RepeatButton x:Name="repeatButton"
                                              Command="{x:Static ScrollBar.LineLeftCommand}"
                                              IsEnabled="True"
                                              Style="{DynamicResource ScrollBarButtonStyle}"
                                              Opacity="1"
                                              RenderTransformOrigin="0.5,0.5"
                                              VerticalAlignment="Center">
                                    <RepeatButton.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform Angle="-90" />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </RepeatButton.RenderTransform>
                                </RepeatButton>
                                <Track x:Name="PART_Track"
                                       Grid.Column="1"
                                       IsEnabled="True">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}"
                                                      Style="{StaticResource ScrollBarPageButtonStyle}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}"
                                                      Style="{StaticResource ScrollBarPageButtonStyle}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource HScrollBarThumbStyle}"
                                               VerticalAlignment="Center"
                                               Height="30" />
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton x:Name="repeatButton1"
                                              Grid.Column="2"
                                              Command="{x:Static ScrollBar.LineRightCommand}"
                                              IsEnabled="True"
                                              Style="{DynamicResource ScrollBarButtonStyle}"
                                              Opacity="1"
                                              RenderTransformOrigin="0.5,0.5"
                                              VerticalAlignment="Center">
                                    <RepeatButton.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform Angle="90" />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </RepeatButton.RenderTransform>
                                </RepeatButton>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled"
                                         Value="false">
                                    <Setter Property="Fill"
                                            TargetName="Bg"
                                            Value="{StaticResource ScrollbarDisabledBackgroundBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- *********************************  ScrollViewer Style ********************************* -->
    <Style x:Key="ScrollViewerStyle"
           TargetType="{x:Type ScrollViewer}">
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Top" />
        <Setter Property="VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                CanContentScroll="{TemplateBinding CanContentScroll}"
                                                CanHorizontallyScroll="False"
                                                CanVerticallyScroll="False"
                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                Content="{TemplateBinding Content}"
                                                Grid.Column="0"
                                                Margin="{TemplateBinding Padding}"
                                                Grid.Row="0" />
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                   AutomationProperties.AutomationId="VerticalScrollBar"
                                   Cursor="Arrow"
                                   Grid.Column="1"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   Minimum="0"
                                   Grid.Row="0"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Style="{StaticResource ScrollBarStyle}" />
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                                   AutomationProperties.AutomationId="HorizontalScrollBar"
                                   Cursor="Arrow"
                                   Grid.Column="0"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   Minimum="0"
                                   Orientation="Horizontal"
                                   Grid.Row="1"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Style="{StaticResource ScrollBarStyle}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- *********************************  ListBoxItem Style  ********************************* -->
    <Style x:Key="ListViewItemStyle"
           TargetType="ListViewItem">
        <Setter Property="Background"
                Value="{StaticResource TransparentBrush}" />
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontSize"
                Value="13.333" />
        <Setter Property="FontFamily"
                Value="Segoe UI" />
        <Setter Property="MinHeight"
                Value="30" />
        <Setter Property="Padding"
                Value="6,2" />
        <Setter Property="Margin"
                Value="0" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                       Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource ListBoxItemHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                       Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource ListBoxItemHoverBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground"
                                                                       Storyboard.TargetName="contentControl">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="BgSelected">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>-->
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="contentControl">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="contentControl1">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="Foreground"
                                                                       Storyboard.TargetName="contentControl1">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <!--<VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="BgSelected">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground"
                                                                       Storyboard.TargetName="contentControl">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>-->
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="FocusedVisualElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Bd"
                                   Fill="{TemplateBinding Background}" />
                        <Rectangle x:Name="BgSelected"
                                   Fill="{StaticResource ListBoxItemSelectedBackgroundBrush}"
                                   Stroke="{StaticResource ListBoxItemSelectedBorderBrush}"
                                   Visibility="Collapsed" />
                        <ContentControl x:Name="contentControl"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Margin="{TemplateBinding Padding}"
                                        Foreground="{TemplateBinding Foreground}">
                            <ContentPresenter x:Name="contentPresenter" />
                        </ContentControl>
                        <ContentControl x:Name="contentControl1"
                                        Visibility="Collapsed"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Margin="{TemplateBinding Padding}"
                                        Foreground="{StaticResource ForegroundBrush}">
                            <ContentPresenter x:Name="contentPresenter1" />
                        </ContentControl>
                        <Rectangle x:Name="FocusedVisualElement"
                                   IsHitTestVisible="False"
                                   Visibility="Collapsed"
                                   Stroke="{StaticResource ListBoxItemPressedBorderBrush}"
                                   StrokeThickness="2" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{StaticResource DisabledVisualElement}"
                                   Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  ButtonStyle  ********************************* -->
    <Style x:Key="ButtonStyle"
           TargetType="Button">
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontSize"
                Value="14.667" />
        <Setter Property="FontFamily"
                Value="Segoe UI" />
        <Setter Property="Padding"
                Value="10,0,10,2" />
        <Setter Property="MinHeight"
                Value="30" />
        <Setter Property="MinWidth"
                Value="30" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                       Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource ButtonHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                       Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource ButtonHoverBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="Foreground"
                                                                       Storyboard.TargetName="ContentControl">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                       Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource ButtonPressedBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                       Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource ButtonPressedBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="Foreground"
                                                                       Storyboard.TargetName="ContentControl">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="FocusedVisualElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Bd"
                                   Fill="{StaticResource ButtonBackgroundBrush}"
                                   Stroke="{StaticResource ButtonBorderBrush}"
                                   StrokeThickness="1" />
                        <ContentControl x:Name="ContentControl"
                                        Foreground="{TemplateBinding Foreground}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        Margin="{TemplateBinding Padding}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ContentPresenter x:Name="contentPresenter" />
                        </ContentControl>
                        <Rectangle x:Name="FocusedVisualElement"
                                   Stroke="{StaticResource ButtonPressedBorderBrush}"
                                   Visibility="Collapsed"
                                   StrokeThickness="2" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{StaticResource DisabledVisualElement}"
                                   Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  TextBox Style  ********************************* -->
    <Style x:Key="TextBoxStyle"
           TargetType="TextBox">
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontSize"
                Value="13.333" />
        <Setter Property="FontFamily"
                Value="Segoe UI" />
        <Setter Property="Background"
                Value="{StaticResource TextBoxBackgroundBrush}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource TextBoxBorderBrush}" />
        <Setter Property="MinHeight"
                Value="30" />
        <Setter Property="Padding"
                Value="6,4" />
        <Setter Property="SelectionBrush"
                Value="{StaticResource TextBoxFocusedBrush}" />
        <Setter Property="CaretBrush"
                Value="{StaticResource CaretForegroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid x:Name="RootElement">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="BorderBrush"
                                                                       Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource TextBoxHoverBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="Background"
                                                                       Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource TextBoxHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="DisabledVisualElement" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="ReadOnlyVisualElement" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="FocusVisualElement" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="0"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="FocusVisualElement" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <!--<VisualStateGroup x:Name="ValidationStates">
								<VisualState x:Name="Valid" />
								<VisualState x:Name="InvalidUnfocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="InvalidFocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Boolean>True</System:Boolean>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>-->
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Opacity="1">
                            <Grid>
                                <Border x:Name="ReadOnlyVisualElement"
                                        Background="{StaticResource TextBoxReadOnlyBackgroundBrush}"
                                        Opacity="0" />
                                <ScrollViewer x:Name="PART_ContentHost"
                                              BorderThickness="0"
                                              IsTabStop="False"
                                              Padding="{TemplateBinding Padding}" />
                            </Grid>
                        </Border>
                        <Border x:Name="DisabledVisualElement"
                                BorderBrush="{StaticResource DisabledVisualElement}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{StaticResource DisabledVisualElement}"
                                IsHitTestVisible="False"
                                Opacity="0" />
                        <Border x:Name="FocusVisualElement"
                                BorderBrush="{StaticResource TextBoxFocusedBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                IsHitTestVisible="False"
                                Opacity="0" />
                        <!--<Border x:Name="ValidationErrorElement" BorderBrush="{StaticResource ValidationErrorElement}" BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed">
							<ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
									<ToolTip.Triggers>
										<EventTrigger RoutedEvent="Canvas.Loaded">
											<BeginStoryboard>
												<Storyboard>
													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
														<DiscreteObjectKeyFrame KeyTime="0">
															<DiscreteObjectKeyFrame.Value>
																<System:Boolean>true</System:Boolean>
															</DiscreteObjectKeyFrame.Value>
														</DiscreteObjectKeyFrame>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</BeginStoryboard>
										</EventTrigger>
									</ToolTip.Triggers>
								</ToolTip>
							</ToolTipService.ToolTip>
						</Border>-->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Border BorderThickness="1"
                                CornerRadius="3">
                        </Border>
                        <AdornedElementPlaceholder />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="Validation.HasError"
                     Value="true">
                <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                <Setter Property="Background"
                        Value="{StaticResource TextBoxFocusedBrush}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- *********************************  Label Style  ********************************* -->
    <Style x:Key="LabelStyle"
           TargetType="{x:Type Label}">
        <Setter Property="FontFamily"
                Value="Segoe UI" />
        <Setter Property="FontSize"
                Value="13.333" />
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush}" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
    </Style>

    <!-- *********************************  ListBox Style  ********************************* -->
    <Style x:Key="ListViewStyle"
           TargetType="ListView">
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="Background"
                Value="{StaticResource ListBoxBackgroundBrush}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ListBoxBorderBrush}" />
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Top" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="ItemContainerStyle"
                Value="{StaticResource ListViewItemStyle}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen"
                                                                       Storyboard.TargetName="validationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <system:Boolean>True</system:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}">
                            <ScrollViewer x:Name="ScrollViewer"
                                          BorderThickness="0"
                                          Padding="{TemplateBinding Padding}"
                                          Style="{StaticResource ScrollViewerStyle}">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                        <Border x:Name="ValidationErrorElement"
                                BorderBrush="{StaticResource ValidationErrorElement}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2"
                                Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip"
                                         DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Placement="Right"
                                         PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Template="{StaticResource ValidationToolTipTemplate}">
                                    <ToolTip.Triggers>
                                        <EventTrigger RoutedEvent="Canvas.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible"
                                                                                   Storyboard.TargetName="validationTooltip">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <system:Boolean>true</system:Boolean>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </ToolTip.Triggers>
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <Grid Background="{StaticResource TransparentBrush}"
                                  HorizontalAlignment="Right"
                                  Height="10"
                                  Margin="0,-4,-4,0"
                                  VerticalAlignment="Top"
                                  Width="10">
                                <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z"
                                      Fill="{StaticResource ValidationErrorElement}"
                                      Margin="-1,3,0,0" />
                                <Path Data="M 0,0 L2,0 L 8,6 L8,8"
                                      Fill="{StaticResource LightForegroundBrush}"
                                      Margin="-1,3,0,0" />
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- *********************************  ToggleButton Style  ********************************* -->
    <Style x:Key="ToggleButtonStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="FontFamily"
                Value="Segoe UI" />
        <Setter Property="FontSize"
                Value="14.667" />
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Padding"
                Value="10,0,10,2" />
        <Setter Property="MinHeight"
                Value="30" />
        <Setter Property="MinWidth"
                Value="30" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                       Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource ButtonHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                       Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource ButtonHoverBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="Foreground"
                                                                       Storyboard.TargetName="contentControl">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                       Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource ButtonPressedBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd"
                                                                       Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource ButtonPressedBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="Foreground"
                                                                       Storyboard.TargetName="contentControl">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="checked">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="contentControl">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="contentControl1">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="Foreground"
                                                                       Storyboard.TargetName="contentControl1">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource LightForegroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="FocusedVisualElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Bd"
                                   Fill="{StaticResource ButtonBackgroundBrush}"
                                   Stroke="{StaticResource ButtonBorderBrush}"
                                   StrokeThickness="1" />
                        <Rectangle x:Name="checked"
                                   Fill="{StaticResource ButtonHoverBorderBrush}"
                                   Stroke="{StaticResource ButtonPressedBorderBrush}"
                                   StrokeThickness="1"
                                   Visibility="Collapsed" />
                        <ContentControl x:Name="contentControl"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Margin="{TemplateBinding Padding}"
                                        Foreground="{TemplateBinding Foreground}">
                            <ContentPresenter x:Name="contentPresenter" />
                        </ContentControl>
                        <ContentControl x:Name="contentControl1"
                                        Visibility="Collapsed"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Margin="{TemplateBinding Padding}"
                                        Foreground="{StaticResource ForegroundBrush}">
                            <ContentPresenter x:Name="contentPresenter1" />
                        </ContentControl>
                        <Rectangle x:Name="FocusedVisualElement"
                                   Stroke="{StaticResource ButtonPressedBorderBrush}"
                                   Visibility="Collapsed"
                                   StrokeThickness="2" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{StaticResource DisabledVisualElement}"
                                   Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ServerListViewItemStyle"
           BasedOn="{StaticResource ListViewItemStyle}"
           TargetType="ListViewItem">
        <Setter Property="Padding" Value="0" />
    </Style>
    
    <Style x:Key="ServerListView"
           BasedOn="{StaticResource ListViewStyle}"
           TargetType="ListView">
        <Setter Property="ItemContainerStyle"
                Value="{StaticResource ServerListViewItemStyle}" />
    </Style>

    <!-- *********************************  TextBox Style  ********************************* -->
    <Style x:Key="PasswordoxStyle"
           TargetType="PasswordBox">
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontSize"
                Value="13.333" />
        <Setter Property="FontFamily"
                Value="Segoe UI" />
        <Setter Property="Background"
                Value="{StaticResource TextBoxBackgroundBrush}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource TextBoxBorderBrush}" />
        <Setter Property="MinHeight"
                Value="30" />
        <Setter Property="Padding"
                Value="6,4" />
        <Setter Property="SelectionBrush"
                Value="{StaticResource TextBoxFocusedBrush}" />
        <Setter Property="CaretBrush"
                Value="{StaticResource CaretForegroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="PasswordBox">
                    <Grid x:Name="RootElement">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="BorderBrush"
                                                                       Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource TextBoxHoverBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="Background"
                                                                       Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{StaticResource TextBoxHoverBackgroundBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="DisabledVisualElement" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="ReadOnlyVisualElement" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="FocusVisualElement" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="0"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="FocusVisualElement" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <!--<VisualStateGroup x:Name="ValidationStates">
								<VisualState x:Name="Valid" />
								<VisualState x:Name="InvalidUnfocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="InvalidFocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Boolean>True</System:Boolean>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>-->
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Opacity="1">
                            <Grid>
                                <Border x:Name="ReadOnlyVisualElement"
                                        Background="{StaticResource TextBoxReadOnlyBackgroundBrush}"
                                        Opacity="0" />
                                <ScrollViewer x:Name="PART_ContentHost"
                                              BorderThickness="0"
                                              IsTabStop="False"
                                              Padding="{TemplateBinding Padding}" />
                            </Grid>
                        </Border>
                        <Border x:Name="DisabledVisualElement"
                                BorderBrush="{StaticResource DisabledVisualElement}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{StaticResource DisabledVisualElement}"
                                IsHitTestVisible="False"
                                Opacity="0" />
                        <Border x:Name="FocusVisualElement"
                                BorderBrush="{StaticResource TextBoxFocusedBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                IsHitTestVisible="False"
                                Opacity="0" />
                        <!--<Border x:Name="ValidationErrorElement" BorderBrush="{StaticResource ValidationErrorElement}" BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed">
							<ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
									<ToolTip.Triggers>
										<EventTrigger RoutedEvent="Canvas.Loaded">
											<BeginStoryboard>
												<Storyboard>
													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
														<DiscreteObjectKeyFrame KeyTime="0">
															<DiscreteObjectKeyFrame.Value>
																<System:Boolean>true</System:Boolean>
															</DiscreteObjectKeyFrame.Value>
														</DiscreteObjectKeyFrame>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</BeginStoryboard>
										</EventTrigger>
									</ToolTip.Triggers>
								</ToolTip>
							</ToolTipService.ToolTip>
						</Border>-->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Border BorderThickness="1"
                                CornerRadius="3">
                        </Border>
                        <AdornedElementPlaceholder />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="Validation.HasError"
                     Value="true">
                <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                <Setter Property="Background"
                        Value="{StaticResource TextBoxFocusedBrush}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="NavigationButtonStyle" BasedOn="{StaticResource ButtonStyle}" TargetType="Button">
        <Setter Property="Margin" 
                Value="5"/>
        <Setter Property="Width"
                Value="80" />
        <Setter Property="Height"
                Value="80" />
    </Style>
    
    <Style x:Key="WaitingLabelStyle" BasedOn="{StaticResource LabelStyle}" TargetType="Label">
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Margin"
                Value="15" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
    </Style>
    <!--********************** Implicit Styles *********************** -->
    <Style BasedOn="{StaticResource ButtonStyle}"
           TargetType="{x:Type Button}" />
    <Style BasedOn="{StaticResource TextBoxStyle}"
           TargetType="{x:Type TextBox}" />
    <Style BasedOn="{StaticResource ListViewStyle}"
           TargetType="{x:Type ListView}" />
    <Style BasedOn="{StaticResource ListViewItemStyle}"
           TargetType="{x:Type ListViewItem}" />
    <Style BasedOn="{StaticResource TextBlockStyle}"
           TargetType="{x:Type TextBlock}" />
    <Style BasedOn="{StaticResource LabelStyle}"
           TargetType="{x:Type Label}" />
    <Style BasedOn="{StaticResource ToggleButtonStyle}"
           TargetType="{x:Type ToggleButton}" />
    <Style BasedOn="{StaticResource PasswordoxStyle}"
           TargetType="{x:Type PasswordBox}" />
</ResourceDictionary>